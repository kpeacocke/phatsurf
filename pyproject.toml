[tool.poetry]
name = "phatsurf"
version = "0.1.0"
description = "A web application for surfboard recommendations based on user preferences and surf conditions."
authors = ["Kristian Peacocke <krpeacocke@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
flask = "^3.1.1"
flask-pymongo = "^3.0.1"
python-dotenv = "^1.1.1"
pymongo = "^4.13"
flask-wtf = "^1.1.1"
gunicorn = "^23.0.0"
flask-login = "^0.6.3"
flask-bcrypt = "^1.0.1"

[tool.poetry.dev-dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"
tox = "^4.27.0"
flake8 = "^7.3.0"
black = "^25.1.0"
mypy = "^1.17.0"
isort = "^6.0.0"
mongomock = "^4.1.2"
debugpy = "^1.8.15"

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
show_missing = true

[tool.flake8]
max-line-length = 88
exclude = [".tox", ".venv", ".git", "__pycache__", "build", "dist", "codeql"]

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true
skip = ["codeql"]

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry>=1.3.0"]
build-backend = "poetry.core.masonry.api"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py313, lint, typecheck, format, coverage

[testenv]
description = Run tests using pytest and generate coverage.
deps =
    pytest
    pytest-cov
    flask-pymongo
    python-dotenv
commands = pytest --cov=app --cov-report=xml:coverage.xml

[testenv:lint]
description = Run code linting with flake8.
deps = flake8
commands = flake8 app tests

[testenv:typecheck]
description = Run type checking with mypy.
deps = mypy
commands = mypy --ignore-missing-imports app tests

[testenv:format]
description = Format code with black and isort.
deps =
    black
    isort
commands =
    black --check app tests
    isort --check-only app tests

[testenv:coverage]
description = Generate and display a coverage report.
deps =
    coverage
    pytest-cov
commands =
    coverage report
    coverage html
    coverage xml
"""