name: Snyk Security Scan
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: .python-version

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-interaction --no-ansi --no-root

      # Step 4: Install Snyk CLI
      - name: Install Snyk CLI
        run: |
          curl -sL https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x snyk
          sudo mv snyk /usr/local/bin/snyk
          snyk --version

      # Step 5: Install missing packages for xdg-open
      - name: Install xdg-open Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y lynx w3m

      # Step 6: Run Snyk to check for vulnerabilities
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk auth --auth-type=token $SNYK_TOKEN
          snyk test --severity-threshold=high --all-projects

      # Step 7: Monitor the project (optional)
      - name: Monitor Project in Snyk
        if: github.ref == 'refs/heads/main'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor --all-projects

