[tox]
envlist = ppy313, lint, format, coverage, mypy, bandit, safety
requires = tox>=4.0
isolated_build = true

[testenv]
basepython = python3.13  # ✅ Explicitly define the interpreter
usedevelop = true  # ✅ Ensures tox uses the local environment
skip_install = false  # ✅ Ensure dependencies are installed in virtualenv
deps =
    pytest
    pytest-cov
    pytest-mock
    pymongo
    flask
    flask-pymongo
    python-dotenv
    mongomock
    coverage
commands =
    pytest --cov=app --cov-report=xml --cov-report=html --cov-config=.coveragerc -v

[testenv:lint]
basepython = python3.13
description = Run linting tools: isort and flake8.
deps =
    flake8
    flake8-bugbear
    flake8-comprehensions
    isort
commands =
    isort --check-only app tests
    flake8 app tests

[testenv:format]
basepython = python3.13
description = Auto-format code with isort and black.
deps =
    isort
    black
commands =
    isort app tests
    black app tests

[testenv:coverage]
basepython = python3.13
description = Generate and display a coverage report.
deps =
    coverage
    pytest
    pytest-cov
    mongomock
commands =
    coverage run -m pytest
    coverage report --fail-under=90 --rcfile=.coveragerc
    coverage html --rcfile=.coveragerc
    coverage xml --rcfile=.coveragerc

[testenv:mypy]
description = Run static type checking using mypy.
deps =
    mypy
commands =
    mypy app tests

[testenv:bandit]
description = Run security checks with bandit.
deps =
    bandit
commands =
    bandit -r app

[testenv:safety]
description = Check installed dependencies for known security vulnerabilities.
deps =
    safety
setenv =
    SAFETY_API_KEY = {env:SAFETY_API_KEY}
commands =
    safety scan

[pytest]
addopts = -ra --strict-markers
norecursedirs = .tox .venv .git __pycache__ build dist codeql
testpaths = tests

[flake8]
max-line-length = 88
exclude = .tox, .venv, .git, __pycache__, build, dist, codeql, .coveragerc
extend-ignore = E203, W503
import-order-style = cryptography
application-import-names = app

[isort]
profile = black
line_length = 88
known_first_party = app
known_third_party = flask, pymongo, flask-pymongo, python-dotenv, mongomock, pytest
skip_gitignore = true
skip = .tox, .venv, __pycache__, codeql

[tool.black]
line-length = 88
exclude = "(\.tox|\.venv|build|dist|__pycache__|\.coveragerc|codeql)"

[coverage:run]
omit = codeql/**

